PROJECT(devrecog-sample C)
SET(CMAKE_C_STANDARD 90)
# arm64 still not supported
SET(CMAKE_OSX_ARCHITECTURES x86_64)

CMAKE_MINIMUM_REQUIRED(VERSION 3.3.1)
SET(CMAKE_C_FLAGS_DEBUG  "${CMAKE_C_FLAGS_DEBUG} -Wall")

IF (CMAKE_BUILD_TYPE MATCHES DEBUG)
    MESSAGE(STATUS "Debug mode")
    SET(CMAKE_VERBOSE_MAKEFILE ON)
ENDIF()

# Cmake Policies
IF(NOT CMAKE_VERSION VERSION_LESS 3.9.0)
    CMAKE_POLICY(SET CMP0068 OLD)
ENDIF()

# Variables
IF (NOT DEFINED C_EXECUTABLE)
    SET(C_EXECUTABLE devrecog-c)
ENDIF()
IF (NOT DEFINED CPP_EXECUTABLE)
    SET(CPP_EXECUTABLE devrecog-cpp)
ENDIF()
IF (NOT DEFINED CS_EXECUTABLE)
    SET(CS_EXECUTABLE devrecog-cs)
ENDIF()

SET(LIB_DIR ${CMAKE_SOURCE_DIR}/lib)
SET(INCLUDE_DIR ${CMAKE_SOURCE_DIR}/include)

# OS Specific
IF (WIN32)
ELSEIF(APPLE)
    SET(LIBFINGKIT ${LIB_DIR}/libfingkit.dylib)
ELSE()
    SET(LIBFINGKIT ${LIB_DIR}/libfingkit.so)
    LINK_DIRECTORIES(${LIB_DIR})
ENDIF()

# Include
INCLUDE_DIRECTORIES(${INCLUDE_DIR})

# Libraries
LINK_DIRECTORIES(${LIB_DIR})

# Sources
#  -> C
ADD_EXECUTABLE(${C_EXECUTABLE} src/fing_kit_demo.c)
TARGET_LINK_LIBRARIES(${C_EXECUTABLE} ${LIBFINGKIT})

#  -> C++
if(CMAKE_CXX_COMPILER)
    ENABLE_LANGUAGE(CXX)
    SET(CMAKE_CXX_STANDARD 98)
    ADD_EXECUTABLE(${CPP_EXECUTABLE} src/fing_kit_demo.cpp)
    TARGET_LINK_LIBRARIES(${CPP_EXECUTABLE} ${LIBFINGKIT})
 else()
    MESSAGE(STATUS "No C++ support")
 endif()

#  -> CS
if(CMAKE_CSharp_COMPILER)
    ENABLE_LANGUAGE(CSharp)
    ADD_EXECUTABLE(${CS_EXECUTABLE} src/fing_kit_demo.cs)
    TARGET_LINK_LIBRARIES(${CS_EXECUTABLE} ${LIBFINGKIT})
else()
    MESSAGE(STATUS "No C# support")
endif()

