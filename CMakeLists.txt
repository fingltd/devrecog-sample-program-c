PROJECT(devrecog-sample C CXX)

CMAKE_MINIMUM_REQUIRED(VERSION 3.3.1)
SET(CMAKE_CXX_FLAGS_DEBUG  "-Wall")

IF (CMAKE_BUILD_TYPE MATCHES DEBUG)
    MESSAGE(STATUS "Debug mode")
    SET(CMAKE_VERBOSE_MAKEFILE ON)
ENDIF()

# Cmake Policies
IF(NOT CMAKE_VERSION VERSION_LESS 3.9.0)
    CMAKE_POLICY(SET CMP0068 OLD)
ENDIF()

# Variables
IF (NOT DEFINED C_EXECUTABLE)
    SET(C_EXECUTABLE devrecog-c)
ENDIF()
IF (NOT DEFINED CPP_EXECUTABLE)
    SET(CPP_EXECUTABLE devrecog-cpp)
ENDIF()
IF (NOT DEFINED CS_EXECUTABLE)
    SET(CS_EXECUTABLE devrecog-cs)
ENDIF()

# OS Specific
IF (WIN32)
    ENABLE_LANGUAGE(CS)
    LINK_DIRECTORIES(${CMAKE_SOURCE_DIR}/lib/windows)
ELSEIF(APPLE)
    IF (NOT DEFINED LIBDIR)
        SET(LIBDIR ${CMAKE_SOURCE_DIR}/lib/macosx)
    ENDIF()
    SET(LIBFINGKIT ${LIBDIR}/libfingkit.dylib)
ELSE()
    LINK_DIRECTORIES(${CMAKE_SOURCE_DIR}/lib/linux)
ENDIF()

# Include
INCLUDE_DIRECTORIES(include)

# Libraries
LINK_DIRECTORIES(${LIBDIR})

# Sources
ADD_EXECUTABLE(${C_EXECUTABLE} src/fing_kit_demo.c)
TARGET_LINK_LIBRARIES(${C_EXECUTABLE} ${LIBFINGKIT})

ADD_EXECUTABLE(${CPP_EXECUTABLE} src/fing_kit_demo.cpp)
TARGET_LINK_LIBRARIES(${CPP_EXECUTABLE} ${LIBFINGKIT})

IF("CS" IN_LIST languages)
    MESSAGE("CS enabled")
    ADD_EXECUTABLE(${CS_EXECUTABLE} src/fing_kit_demo.cs)
    TARGET_LINK_LIBRARIES(${CS_EXECUTABLE} ${LIBFINGKIT})
ENDIF()






